<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cve on AMRIUNIX</title>
    <link>http://localhost:1313/tags/cve/</link>
    <description>Recent content in Cve on AMRIUNIX</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Nov 2019 23:13:39 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/cve/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CVE-2019-18276 - Suidbash</title>
      <link>http://localhost:1313/posts/cve-2019-18276-suidbash/</link>
      <pubDate>Thu, 28 Nov 2019 23:13:39 +0100</pubDate>
      <guid>http://localhost:1313/posts/cve-2019-18276-suidbash/</guid>
      <description>This exploit was initially based on an older vulnerability back in 1999 (suidperl). Now after 20 years in 2019 we found the same vulnerability in bash (CVE-2019-18276) was discovered by Ian Pudney.&#xA;TL;DR Link to heading The root cause of this vulnerability is that bash doesn&amp;rsquo;t handle setuid bit correctly, by default bash will drop the SUID privilege if the Real UID is different from the Effective UID, but it forget to drop also the Saved UID.</description>
    </item>
    <item>
      <title>CVE-2007-2447 - Samba usermap script</title>
      <link>http://localhost:1313/posts/cve-2007-2447-samba-usermap-script/</link>
      <pubDate>Fri, 03 Aug 2018 22:00:06 +0100</pubDate>
      <guid>http://localhost:1313/posts/cve-2007-2447-samba-usermap-script/</guid>
      <description>Samba 3.0.0 - 3.0.25rc3 are subject for Remote Command Injection Vulnerability (CVE-2007-2447), allows remote attackers to execute arbitrary commands by specifying a username containing shell meta characters.&#xA;TL;DR Link to heading The root cause is passing unfiltered user input provided via MS-RPC calls to /bin/sh when invoking non-default &amp;quot;username map script&amp;quot; configuration option in smb.conf, so no authentication is needed to exploit this vulnerability.&#xA;Source Link to heading ./source/lib/username.c&#xA;/* first try the username map script */ if ( *cmd ) { char **qlines; pstring command; int numlines, ret, fd; pstr_sprintf( command, &amp;#34;%s \&amp;#34;%s\&amp;#34;&amp;#34;, cmd, user ); DEBUG(10,(&amp;#34;Running [%s]\n&amp;#34;, command)); ret = smbrun(command, &amp;amp;fd); DEBUGADD(10,(&amp;#34;returned [%d]\n&amp;#34;, ret)); if ( ret !</description>
    </item>
  </channel>
</rss>
